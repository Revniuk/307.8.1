// Constants
const totalDistance = 1500; // miles
const fuelBudget = 175; // dollars
const fuelCostPerGallon = 3; // dollars
const speeds = [55, 60, 75]; // miles per hour
const efficiencies = [30, 28, 23]; // miles per gallon

// Function to calculate fuel needed
function calculateFuelNeeded(distance, efficiency) {
    return distance / efficiency;
}

// Function to calculate trip duration
function calculateTripDuration(distance, speed) {
    return distance / speed;
}

// Function to check if budget is enough
function isBudgetEnough(fuelNeeded, budget, fuelCost) {
    return budget >= fuelNeeded * fuelCost;
}

// Function to find optimal speed within budget
function findOptimalSpeed(budget, fuelCost) {
    for (let i = 0; i < speeds.length; i++) {
        const speed = speeds[i];
        const efficiency = efficiencies[i];
        
        // Calculate fuel needed
        const fuelNeeded = calculateFuelNeeded(totalDistance, efficiency);

        // Check if budget is enough
        if (isBudgetEnough(fuelNeeded, budget, fuelCost)) {
            return { speed, fuelNeeded, tripDuration: calculateTripDuration(totalDistance, speed) };
        }
    }

    // If no speed is within budget
    return null;
}

// Find optimal speed
const optimalSpeedResult = findOptimalSpeed(fuelBudget, fuelCostPerGallon);

// Log results
if (optimalSpeedResult) {
    console.log(`Optimal speed within budget found:`);
    console.log(`- Speed: ${optimalSpeedResult.speed} mph`);
    console.log(`- Fuel needed: ${optimalSpeedResult.fuelNeeded.toFixed(2)} gallons`);
    console.log(`- Trip duration: ${optimalSpeedResult.tripDuration.toFixed(2)} hours`);
} else {
    console.log(`No speed within budget found. Adjust your budget or choose a different car.`);
}
